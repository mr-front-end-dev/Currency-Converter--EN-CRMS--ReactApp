{"version":3,"sources":["App/currencies.js","App/Form/Result/index.js","App/Form/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["currencies","short","name","rate","Result","result","className","undefined","sourceAmount","toFixed","targetAmount","currency","Form","calculateResult","useState","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","type","placeholder","min","max","step","required","map","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAAaA,G,MAAa,CACxB,CACEC,MAAO,MACPC,KAAM,kBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,kBACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,oBACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,kBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,kBACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,qBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,mBACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,gBACNC,KAAM,QAER,CACEF,MAAO,UACPC,KAAM,uBACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,cACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,gBACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,oBACNC,KAAM,OAER,CACEF,MAAO,UACPC,KAAM,mBACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,cACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,eACNC,KAAM,OAER,CACEF,MAAO,UACPC,KAAM,sBACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,eACNC,KAAM,MAER,CACEF,MAAO,MACPC,KAAM,gBACNC,KAAM,MAER,CACEF,MAAO,MACPC,KAAM,gBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,eACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,gBACNC,KAAM,QAER,CACEF,MAAO,MACPC,KAAM,eACNC,KAAM,MAER,CACEF,MAAO,MACPC,KAAM,oBACNC,KAAM,QAER,CACEF,MAAO,UACPC,KAAM,mBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,kBACNC,KAAM,MAER,CACEF,MAAO,MACPC,KAAM,eACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,oBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,iBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,oBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,iBACNC,KAAM,OAER,CACEF,MAAO,YACPC,KAAM,0BACNC,KAAM,QAER,CACEF,MAAO,UACPC,KAAM,oBACNC,KAAM,QAER,CACEF,MAAO,UACPC,KAAM,uBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,wBACNC,KAAM,OAER,CACEF,MAAO,MACPC,KAAM,YACNC,KAAM,U,eC3KGC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACpB,mBAAGC,UAAU,SAAb,cACcC,IAAXF,GACC,qCACGA,EAAOG,aAAaC,QAAQ,GAD/B,eAEG,IACD,mCACGJ,EAAOK,aAAaD,QAAQ,GAD/B,OACyCJ,EAAOM,kBCL3CC,G,MAAO,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,gBAAiBR,EAAa,EAAbA,OACtC,EAAgCS,mBAASd,EAAW,GAAGC,OAAvD,mBAAOU,EAAP,KAAiBI,EAAjB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAOA,OACE,uBAAMX,UAAU,OAAOY,SANR,SAACC,GAChBA,EAAMC,iBACNP,EAAgBF,EAAUK,IAI1B,UACE,oBAAIV,UAAU,eAAd,gCACA,8BACE,oBAAGA,UAAU,yBAAb,sCAA+D,sBAAMA,UAAU,uBAAhB,kBAC/D,kCACE,uBAAMA,UAAU,kDAAhB,uBAA4E,sBACxEA,UAAU,uBAD8D,eAA5E,QAEA,uBACEe,MAAOL,EACPM,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAUM,EAAOF,QAC3CG,KAAK,SACLC,YAAY,0BACZnB,UAAU,cACVoB,IAAI,IACJC,IAAI,SACJC,KAAK,OACLC,UAAQ,UAGd,4BACE,kCACE,sBAAMvB,UAAU,kBAAhB,uBACA,wBACEA,UAAU,cACVe,MAAOV,EACPW,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAYQ,EAAOF,QAH/C,SAKGrB,EAAW8B,KAAK,SAAAnB,GAAQ,OACvB,wBAEEU,MAAOV,EAASV,MAFlB,SAIGU,EAAST,MAHLS,EAASV,iBASxB,4BACE,wBAAQK,UAAU,mBAAlB,wBAEF,mBAAGA,UAAU,aAAb,kFACA,cAAC,EAAD,CAAQD,OAAQA,SC3BP0B,MAzBf,WACE,MAA4BjB,qBAA5B,mBAAOT,EAAP,KAAe2B,EAAf,KAcA,OACE,qBAAK1B,UAAU,MAAf,SACE,cAAC,EAAD,CACED,OAAQA,EACRQ,gBAhBkB,SAACF,EAAUK,GACjC,IAAMb,EAAOH,EACViC,MAAK,qBAAGhC,QAAsBU,KAC9BR,KAEH6B,EAAU,CACRxB,cAAeQ,EACfN,aAAcM,EAASb,EACvBQ,mBCJSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b195391e.chunk.js","sourcesContent":["export const currencies = [\r\n  {\r\n    short: \"THB\",\r\n    name: \"Thailandian bat\",\r\n    rate: 0.1237,\r\n  },\r\n  {\r\n    short: \"USD\",\r\n    name: \"American dollar\",\r\n    rate: 3.7031,\r\n  },\r\n  {\r\n    short: \"AUD\",\r\n    name: \"Australian dollar\",\r\n    rate: 2.8569,\r\n  },\r\n  {\r\n    short: \"HKD\",\r\n    name: \"Hongkong dollar\",\r\n    rate: 0.4777,\r\n  },\r\n  {\r\n    short: \"CAD\",\r\n    name: \"Canadian dollar\",\r\n    rate: 2.9073,\r\n  },\r\n  {\r\n    short: \"NZD\",\r\n    name: \"New Zealand dollar\",\r\n    rate: 2.6710,\r\n  },\r\n  {\r\n    short: \"SGD\",\r\n    name: \"Singapore dollar\",\r\n    rate: 2.8076,\r\n  },\r\n  {\r\n    short: \"EUR\",\r\n    name: \"European euro\",\r\n    rate: 4.5446,\r\n  },\r\n  {\r\n    short: \"HUF_100\",\r\n    name: \"100 Hungarian forint\",\r\n    rate: 1.2577,\r\n  },\r\n  {\r\n    short: \"CHF\",\r\n    name: \"Swiss franc\",\r\n    rate: 4.2078,\r\n  },\r\n  {\r\n    short: \"GBP\",\r\n    name: \"British pound\",\r\n    rate: 5.0261,\r\n  },\r\n  {\r\n    short: \"UAH\",\r\n    name: \"Ukrainian hryvnia\",\r\n    rate: 0.1304,\r\n  },\r\n  {\r\n    short: \"JPY_100\",\r\n    name: \"100 Japanese yen\",\r\n    rate: 3.6013,\r\n  },\r\n  {\r\n    short: \"CZK\",\r\n    name: \"Czech krone\",\r\n    rate: 0.1735,\r\n  },\r\n  {\r\n    short: \"DKK\",\r\n    name: \"Danish krone\",\r\n    rate: 0.6109,\r\n  },\r\n  {\r\n    short: \"ISK_100\",\r\n    name: \"100 Icelandic krona\",\r\n    rate: 2.9113,\r\n  },\r\n  {\r\n    short: \"NOK\",\r\n    name: \"Norway krone\",\r\n    rate: 0.4340,\r\n  },\r\n  {\r\n    short: \"SEK\",\r\n    name: \"Swedish krona\",\r\n    rate: 0.4510,\r\n  },\r\n  {\r\n    short: \"HRK\",\r\n    name: \"Croatian kuna\",\r\n    rate: 0.6012,\r\n  },\r\n  {\r\n    short: \"RON\",\r\n    name: \"Romanian leu\",\r\n    rate: 0.9329,\r\n  },\r\n  {\r\n    short: \"BGN\",\r\n    name: \"Bulgarian lev\",\r\n    rate: 2.3236,\r\n  },\r\n  {\r\n    short: \"TRY\",\r\n    name: \"Turkish lira\",\r\n    rate: 0.5010,\r\n  },\r\n  {\r\n    short: \"ILS\",\r\n    name: \"New Israel shekel\",\r\n    rate: 1.1545,\r\n  },\r\n  {\r\n    short: \"CLP_100\",\r\n    name: \"100 Chilean peso\",\r\n    rate: 0.5258,\r\n  },\r\n  {\r\n    short: \"PHP\",\r\n    name: \"Philippine peso\",\r\n    rate: 0.0770,\r\n  },\r\n  {\r\n    short: \"MXN\",\r\n    name: \"Mexican peso\",\r\n    rate: 0.1857,\r\n  },\r\n  {\r\n    short: \"ZAR\",\r\n    name: \"South Africa rand\",\r\n    rate: 0.2491,\r\n  },\r\n  {\r\n    short: \"BRL\",\r\n    name: \"Brazilian real\",\r\n    rate: 0.6991,\r\n  },\r\n  {\r\n    short: \"MYR\",\r\n    name: \"Malaysian ringgit\",\r\n    rate: 0.9219,\r\n  },\r\n  {\r\n    short: \"RUB\",\r\n    name: \"Russian rouble\",\r\n    rate: 0.0495,\r\n  },\r\n  {\r\n    short: \"IDR_10000\",\r\n    name: \"10000 Indonesian rupiah\",\r\n    rate: 2.6612,\r\n  },\r\n  {\r\n    short: \"INR_100\",\r\n    name: \"100 Indian rupiah\",\r\n    rate: 5.0608,\r\n  },\r\n  {\r\n    short: \"KRW_100\",\r\n    name: \"100 South Korean won\",\r\n    rate: 0.3401,\r\n  },\r\n  {\r\n    short: \"CNY\",\r\n    name: \"Chinese Yuan renminbi\",\r\n    rate: 0.5731,\r\n  },\r\n  {\r\n    short: \"XDR\",\r\n    name: \"SDR (MFW)\",\r\n    rate: 5.3547,\r\n  }\r\n];","import React from 'react';\r\nimport \"./index.css\";\r\n\r\nexport const Result = ({ result }) => (\r\n  <p className=\"result\">\r\n    {result !== undefined && (\r\n      <>\r\n        {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n        {\" \"}\r\n        <strong>\r\n          {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n        </strong>\r\n      </>\r\n    )}\r\n  </p>\r\n);","import React, { useState } from 'react';\r\nimport { currencies } from \"../currencies\";\r\nimport { Result } from \"./Result\";\r\nimport \"./index.css\";\r\n\r\nexport const Form = ({ calculateResult, result }) => {\r\n  const [currency, setCurrency] = useState(currencies[7].short);\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(currency, amount);\r\n  }\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onSubmit}>\r\n      <h1 className=\"form__header\">Currency Converter</h1>\r\n      <p>\r\n        <p className=\"form__paragraphWarning\">Converting from PLN (PL) <span className=\"form__span--asterisk\">*</span></p>\r\n        <label>\r\n          <span className=\"form__labelText form__labelText--lightslategrey\">Amount in <span\r\n              className=\"form__span--asterisk\">*</span> :</span>\r\n          <input \r\n            value={amount}\r\n            onChange={({ target }) => setAmount(target.value)}\r\n            type=\"number\" \r\n            placeholder=\"Enter the amount in PLN\" \r\n            className=\"form__field\" \r\n            min=\"0\" \r\n            max=\"100000\"\r\n            step=\"0.01\" \r\n            required />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label>\r\n          <span className=\"form__labelText\">Currency:</span>\r\n          <select \r\n            className=\"form__field\"\r\n            value={currency}\r\n            onChange={({ target }) => setCurrency(target.value)}\r\n          >\r\n            {currencies.map((currency => (\r\n              <option\r\n                key={currency.short}\r\n                value={currency.short}\r\n              >\r\n                {currency.name}\r\n              </option>\r\n            )))}\r\n          </select>\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <button className=\"form__buttonText\">Convert!</button>\r\n      </p>\r\n      <p className=\"form__info\">The rates are taken from the table nr 002/A/NBP/2021 from 2020-01-05</p>\r\n      <Result result={result} />\r\n      </form>\r\n  );\r\n}; \r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { Form } from './Form';\r\nimport { currencies } from './currencies';\r\n\r\nfunction App () {\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = (currency, amount) => {\r\n    const rate = currencies\r\n      .find(({ short }) => short === currency)\r\n      .rate;\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount / rate,\r\n      currency,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Form \r\n        result={result}\r\n        calculateResult={calculateResult}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}