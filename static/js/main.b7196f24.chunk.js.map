{"version":3,"sources":["App/Form/Clock/styled.js","App/Form/Clock/index.js","App/Form/Clock/useCurrentDate.js","App/Form/Result/styled.js","App/Form/Result/index.js","App/Form/Projects/styled.js","App/Form/Projects/index.js","App/Form/styled.js","App/Form/index.js","App/Form/useRatesData.js","App/styled.js","App/index.js","GlobalStyle.js","reportWebVitals.js","index.js","theme.js"],"names":["Wrapper","styled","div","theme","color","white","lightslategrey","formatDate","date","toLocaleString","undefined","weekday","hour","minute","second","day","month","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","p","Result","result","sourceAmount","toFixed","targetAmount","currency","Links","section","Link","a","Button","button","crimson","deepSkyBlue","css","deepskyblue","Projects","href","LabelText","span","breakpoint","mobileMax414","Field","input","lightgrey","Header","h1","Loading","Failure","ParagraphWarning","Asterisk","lightgreen","Info","Form","setResult","ratesData","state","setRatesData","setTimeout","fetch","response","ok","Error","statusText","json","rates","useRatesData","setCurrency","amount","setAmount","onSubmit","event","preventDefault","rate","calculateResult","value","onChange","target","type","placeholder","step","required","as","Object","keys","map","App","GlobalStyle","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","black","document","getElementById"],"mappings":"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","file":"static/js/main.b7196f24.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  text-align: right;\r\n  font-family: monospace;\r\n  color: ${({ theme }) => theme.color.white};\r\n  background-color: ${({ theme }) => theme.color.lightslategrey};\r\n  font-size: 16px;\r\n  padding: 20px;\r\n`;","import React from 'react';\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n  weekday: \"long\",\r\n  hour: \"2-digit\",\r\n  minute: \"2-digit\",\r\n  second: \"2-digit\",\r\n  day: \"numeric\",\r\n  month: \"long\"\r\n});\r\n\r\nexport const Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return (\r\n    <Wrapper>\r\n      Today is\r\n      {\" \"}\r\n      {formatDate(date)}\r\n    </Wrapper>\r\n  )\r\n};","import { useState, useEffect } from 'react';\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n  font-size: 22px;\r\n  text-align: center;\r\n  /* ________________________________________________ */\r\n  color: ${({ theme }) => theme.color.lightslategrey};\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  padding: 30px;\r\n  /* ________________________________________________ */\r\n`;","import React from 'react';\r\nimport { Wrapper } from \"./styled\";\r\n\r\nexport const Result = ({ result }) => (\r\n  <Wrapper>\r\n    {result !== undefined && (\r\n      <>\r\n        {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n        {\" \"}\r\n        <strong>\r\n          {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n        </strong>\r\n      </>\r\n    )}\r\n  </Wrapper>\r\n);","import styled, { css } from \"styled-components\";\r\n\r\nexport const Links = styled.section`\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  padding: 20px;\r\n  cursor: context-menu;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  cursor: context-menu;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin: 5px;\r\n  padding: 8px;\r\n  cursor: context-menu;\r\n  border-style: none;\r\n  background-color: ${({ theme }) => theme.color.crimson};\r\n  color: ${({ theme }) => theme.color.white};\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n\r\n  ${({ deepSkyBlue }) => deepSkyBlue && css`\r\n    background-color: ${({ theme }) => theme.color.deepskyblue};\r\n    color: ${({ theme }) => theme.color.white};\r\n  `}\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n`;\r\n\r\n","import React from 'react';\r\nimport { Links, Link, Button } from \"./styled\";\r\n\r\nconst Projects = () => (\r\n  <Links>\r\n    <Link href=\"#\"><Button>RU</Button></Link>\r\n    <Link href=\"#\"><Button>DE</Button></Link>\r\n    <Link href=\"#\"><Button>ES</Button></Link>\r\n    <Link href=\"#\"><Button>PL</Button></Link>\r\n    <Link href=\"#\"><Button>UA</Button></Link>\r\n    <Link href=\"#\"><Button deepSkyBlue>🌓</Button></Link>\r\n  </Links>\r\n)\r\n\r\nexport default Projects;","import styled, { css } from \"styled-components\";\r\n\r\nexport const LabelText = styled.span`\r\n  display: inline-block; \r\n  padding: 15px;\r\n  max-width: 210px; \r\n  width: 100%;\r\n  font-size: 18px;\r\n  color: ${({ theme }) => theme.color.white};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax414}px) {\r\n    max-width: 245px;\r\n  }\r\n\r\n  ${({ lightslategrey }) => lightslategrey && css`\r\n    background-color: ${({ theme }) => theme.color.lightslategrey};\r\n  `}\r\n  \r\n  ${({ crimson }) => crimson && css`\r\n    background-color: ${({ theme }) => theme.color.crimson};\r\n  `}\r\n`;\r\n\r\nexport const Field = styled.input`\r\n  border: 1px solid ${({ theme }) => theme.color.lightgrey};\r\n  width: 100%;\r\n  max-width: 475px;\r\n  padding: 15px;\r\n  font-size: 16px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax414}px) {\r\n    max-width: 245px;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  text-transform: uppercase;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.color.white};\r\n  background-color: ${({ theme }) => theme.color.crimson};\r\n`;\r\n\r\nexport const Loading = styled.p`\r\n  color: ${({ theme }) => theme.color.white};\r\n`;\r\n\r\nexport const Failure = styled.p`\r\n  color: ${({ theme }) => theme.color.crimson};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 26px; \r\n  width: 100%;\r\n  padding: 15px;\r\n  border-style: none;\r\n  color: hsl(0, 0%, 100%);\r\n  background-color: ${({ theme }) => theme.color.lightslategrey};\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n`;\r\n\r\nexport const ParagraphWarning = styled.p`\r\n  text-align: center;\r\n  letter-spacing: 0.5px;\r\n  line-height: 1.5;\r\n  font-size: 20px;\r\n  padding: 15px;\r\n  color: ${({ theme }) => theme.color.white};\r\n  background-color: ${({ theme }) => theme.color.deepskyblue};\r\n`;\r\n\r\nexport const Asterisk = styled.span`\r\n  color: ${({ theme }) => theme.color.lightgreen};\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  color: ${({ theme }) => theme.color.white};\r\n  font-size: 18px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Result = styled.p`\r\n  color: ${({ theme }) => theme.color.white};\r\n  font-size: 22px;\r\n  text-align: center;\r\n`;","import React, { useState } from 'react';\r\nimport { Clock } from \"./Clock\";\r\nimport { Result } from \"./Result\";\r\nimport Projects from \"./Projects\";\r\nimport { Button, \r\n         Field, \r\n         Header, \r\n         Info, \r\n         LabelText, \r\n         Asterisk, \r\n         ParagraphWarning, \r\n         Loading, \r\n         Failure } from \"./styled\";\r\n\r\nimport { useRatesData } from \"./useRatesData\";\r\n\r\nexport const Form = () => {\r\n  const [result, setResult] = useState();\r\n  const ratesData = useRatesData();\r\n\r\n  const calculateResult = (currency, amount) => {\r\n    const rate = ratesData.rates[currency];\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount * rate,\r\n      currency,\r\n    });\r\n  }\r\n\r\n  const [currency, setCurrency] = useState(\"EUR\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(currency, amount);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Clock />\r\n      <Projects />\r\n      <Header>\r\n        Currency Converter\r\n      </Header>\r\n      {ratesData.state === \"loading\"\r\n        ? (\r\n          <Loading>\r\n            Second . . . <br />Loading exchange rates from the European Central Bank . . . 🏦\r\n          </Loading>\r\n        )\r\n        : (\r\n          ratesData.state === \"error\" ? (\r\n            // eslint-disable-next-line jsx-a11y/accessible-emoji\r\n            <Failure>\r\n              Hmm... Something went wrong 😮 Check that you are connected to the internet.<br />\r\n            </Failure>\r\n          ) : (\r\n            <>\r\n              <p>\r\n                <ParagraphWarning>Converting from PLN (PL)<Asterisk> *</Asterisk></ParagraphWarning>\r\n                <label>\r\n                  <LabelText lightslategrey>Amount in \r\n                  <Asterisk> *</Asterisk> :</LabelText>\r\n                  <Field \r\n                    value={amount}\r\n                    onChange={({ target }) => setAmount(target.value)}\r\n                    type=\"number\" \r\n                    placeholder=\"Enter the amount in PLN\" \r\n                    step=\"0.01\" \r\n                    required />\r\n                </label>\r\n              </p>\r\n              <p>\r\n                <label>\r\n                  <LabelText crimson>Currency:</LabelText>\r\n                  <Field \r\n                    as=\"select\"\r\n                    value={currency}\r\n                    onChange={({ target }) => setCurrency(target.value)}\r\n                  >\r\n                    {!!ratesData.rates && Object.keys(ratesData.rates).map(((currency) => (\r\n                      <option\r\n                        key={currency}\r\n                        value={currency}\r\n                      >\r\n                        {currency}\r\n                      </option>\r\n                    )))}\r\n                  </Field>\r\n                </label>\r\n              </p>\r\n              <p>\r\n                <Button>Convert!</Button>\r\n              </p>\r\n\r\n              <Info>\r\n                Exchange rates are taken from the European Central Bank. <br />\r\n              </Info>\r\n              \r\n              <Result result={result} />\r\n            </>\r\n          )\r\n        )}\r\n    </form>\r\n  );\r\n};\r\n \r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n  const [ratesData, setRatesData] = useState({\r\n    state: \"loading\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchRates = async () => {\r\n      try {\r\n        const response = await fetch(\"https://api.exchangeratesapi.io/latest?base=PLN\"); \r\n      \r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n\r\n        const { rates, date } = await response.json();\r\n\r\n        setRatesData({\r\n          state: \"success\",\r\n          rates,\r\n          date,\r\n        });\r\n        \r\n      } catch {\r\n        setRatesData({\r\n          state: \"error\",\r\n        });\r\n      }\r\n    };\r\n\r\n    setTimeout(fetchRates, 1000);\r\n  }, []);\r\n\r\n  return ratesData;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  flex-basis: 900px;\r\n  margin: 20px;\r\n  padding: 40px;\r\n  background-color: ${({ theme }) => theme.color.deepskyblue};\r\n  box-shadow: 0 0 30px ${({ theme }) => theme.color.deepskyblue};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax414}px) {\r\n    flex-basis: 600px;\r\n  }\r\n`;","import React, { useState } from 'react';\r\nimport { Form } from './Form';\r\nimport { Wrapper } from \"./styled\";\r\n\r\nfunction App () {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  #root {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    font-family: 'Montserrat', sans-serif;\r\n    margin: 0;\r\n    background-color: ${({ theme }) => theme.color.lightgrey};\r\n    cursor: context-menu;\r\n  }\r\n`;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();","export const theme = {\r\n  color: {\r\n    white: \"#fff\",\r\n    black: \"#000\",\r\n    deepskyblue: \"#00bfff\",\r\n    crimson: \"#ec365b\",\r\n    lightslategrey: \"#778899\",\r\n    lightgrey: \"#d3d3d3\",\r\n    lightgreen: \"#91ee91\",\r\n  },\r\n  breakpoint: {\r\n    mobileMax414: 414,\r\n  },\r\n};"],"sourceRoot":""}